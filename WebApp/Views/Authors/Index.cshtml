@model ResponseViewModel<ResponsePagedList<ApplicationUserInfoListDTO>>
@{
    ViewData["Title"] = "Authors";
}

@section Scripts {
<script>
    let currentPage = @Model.Content.CurrentPage;
    const pageCount = @Model.Content.PageCount;
    const recordsPerPage = @Model.Content.RecordsPerPage;
    const searchKeyWord = '@Model.Content.SearchKeyWord';
    let loading = false;

    window.onscroll = async function() {
        if (loading) return;
        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 200) {
            if (currentPage >= pageCount) return;
            loading = true;
            currentPage++;
            document.getElementById('loadingSpinner').style.display = 'block';
            try {
                const url = '@Url.Action("LoadMore", "Authors")'
                    + '?page=' + currentPage
                    + '&recordsPerPage=' + recordsPerPage
                    + '&searchKeyWord=' + encodeURIComponent(searchKeyWord);
                const response = await fetch(url);
                if (response.ok) {
                    const html = await response.text();
                    document.getElementById('author-cards-container').insertAdjacentHTML('beforeend', html);
                }
            } finally {
                document.getElementById('loadingSpinner').style.display = 'none';
                loading = false;
            }
        }
    };
</script>
}

<div id="loadingSpinner" style="display:none;text-align:center;">
    <div class="spinner-border" role="status"></div>
</div>

@if (Model.Status == ResponseStatus.Success)
{
  
    if (Model.Content.List.Count() <= 0)
    {
        <partial name="_NoResults" />
    }
    else
    {
        <div id="author-cards-container" class="author-cards-container">
        @foreach (var item in Model.Content.List)
        {
          <partial name="_AuthorCard" model="@item" />
              
        }
        </div>


    }

}
else
{
    <partial name="_ErrorAlert" model="@Model.MessageList" />
}